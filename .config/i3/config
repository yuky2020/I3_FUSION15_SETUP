#Matt (yuky2020)edition

# i3 config file (v4)
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:DejaVu Sans Mono 8
font pango:LigaSFMonoNerdFont-Regular 10, Terminus 10

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
##exec --no-startup-id xss-lock --transfer-sleep-lock --"betterlockscreen --lock blur" --nofork
### Make things more complex for make it woking
exec --no-startup-id xss-lock -- ~/.config/i3/Scripts/lock.sh


# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
# Use pactl to adjust volume in PulseAudio.
exec caffeine -d
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec  "amixer -q sset Master,0 5+ unmute && ~/.config/i3/Scripts/volume_notify.sh"
bindsym XF86AudioLowerVolume exec "amixer -q sset Master,0 5- unmute && $HOME/.config/i3/Scripts/volume_notify.sh"
bindsym XF86AudioMute exec  "amixer -D pulse set Master 1+ toggle"
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3statusi
# Bind brightness key 
bindsym XF86MonBrightnessUp exec "light -s sysfs/backlight/intel_backlight -A 5 && ~/.config/i3/Scripts/brightness_notify.sh"
bindsym XF86MonBrightnessDown exec "light -s sysfs/backlight/intel_backlight -U 5 && ~/.config/i3/Scripts/brightness_notify.sh"
#Use rofi android style scrot 
bindsym --release Print exec  ~/.config/rofi/android/screenshot.sh  
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill
# start emacs client 
bindsym $mod+Tab    exec "emacsclient -c -a 'emacs'"
# start rofi  (a program launcher)
bindsym $mod+d exec ~/.config/rofi/launchers/launcher.sh
bindsym $mod+Shift+d exec "dmenu_run"
bindsym $mod+n exec  ~/.config/rofi/wifi/nmcli-rofi

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+ograve focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ograve move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# vscode, files, browser, notes shortcuts
bindsym $mod+c exec nautilus
bindsym $mod+t exec  ~/.config/rofi/android/apps.sh 
#bindsym $mod+n exec typora
bindsym $mod+b exec microsoft-edge

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:web"
set $ws2 "2:code"
set $ws3 "3:game"
set $ws4 "4:chill"
set $ws5 "5:work"
set $ws6 "6:vm"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
# Alt-tab old fashion
bindsym Mod1+Tab workspace back_and_forth
#number
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
## using plasma's logout screen instead of i3's
#bindsym $mod+Shift+e exec --no-startup-id qdbus org.kde.ksmserver /KSMServer org.kde.KSMServerInterface.logout -1 -1 -1

#exec rofi as power menu 
bindsym $mod+Shift+e exec ~/.config/rofi/android/powermenu.sh
#bindsym $mod+Shift+e exec --no-startup-id  rofi-power
#find the frist free workspace
# bindsym $mod+i exec --no-startup-id ~/.config/i3/Scripts/next_available_ws.sh

 # move container to new window
bindsym $mod+Shift+i exec --no-startup-id ~/.config/i3/Scripts/next_available_ws.sh -m

#Lock the screen 
#bindsym $mod+Shift+x exec betterlockscreen --lock blur
bindsym $mod+Shift+x exec --no-startup-id sleep 1 && xset dpms force suspend

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ograve resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Plasma compatibility improvements
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

for_window [class="yakuake"] floating enable
for_window [class="systemsettings"] floating enable
for_window [class="plasmashell"] floating enable;
for_window [class="Plasma"] floating enable; border none
for_window [title="plasma-desktop"] floating enable; border none
for_window [title="win7"] floating enable; border none
for_window [class="krunner"] floating enable; border none
for_window [class="Kmix"] floating enable; border none
for_window [class="Klipper"] floating enable; border none
for_window [class="Plasmoidviewer"] floating enable; border none
for_window [class="(?i)*nextcloud*"] floating disable
for_window [class="plasmashell" window_type="notification"] border none, move right 700px, move down 450px
no_focus [class="plasmashell" window_type="notification"]
for_window [title="Desktop — Plasma"] kill; floating enable; border none
for_window [title="^zoom$"] floating enable
for_window [class=".*"] border pixel 1


# assign special properties
for_window [class="^Pavucontrol$"] floating enable
for_window [title="MonoDevelop External Console"] floating enable
for_window [class="^Shutter$"] floating enable
# Enables floating windows of the chrome extension "Videostream for Chromecast"
for_window [instance="^crx_cnciopoikihiagdjbjpnocolokfelagl$"] floating enable
# The Chrome "Page Unresponsive" dialog is not floating...
for_window [title="Page Unresponsive"] floating enable
# Share your screen from Google Cast extension
for_window [title="Share your screen - Google Cast"] floating enable
# TeamSpeak new features window
for_window [class="^TeamSpeak 3$" title="^New TeamSpeak Features"] floating enable
# Android Device Monitor startup window
for_window [class="^Monitor$" instance="^Monitor$" title="^Monitor$"] floating enable
# chromeIPass "No logins found." window
for_window [title="^chromeIPass$"] floating enable

# Jetbrains
for_window [class="^com-intellij-updater-Runner$" title="^Update$"] floating enable
for_window [instance="^sun-awt-X11-XDialogPeer$" title="^Complete Installation$"] floating enable

# Unity
for_window [class="^Unity$" title="^Starting Unity...$"] floating enable
for_window [class="^Unity$" title="^Hold On$"] floating enable
for_window [class="^Unity$" title="^Preparing Package$"] floating enable
for_window [class="^Unity$" title="^Importing Package$"] floating enable

# https://github.com/ValveSoftware/steam-for-linux/issues/1040
for_window [class="^Steam$" title="^Friends$"] floating enable
for_window [class="^Steam$" title="Steam - News"] floating enable
for_window [class="^Steam$" title=".* - Chat"] floating enable
for_window [class="^Steam$" title="^Settings$"] floating enable
for_window [class="^Steam$" title=".* - event started"] floating enable
for_window [class="^Steam$" title=".* CD key"] floating enable
for_window [class="^Steam$" title="^Steam - Self Updater$"] floating enable
for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable
for_window [class="^Steam$" title="^Steam Guard - Computer Authorization Required$"] floating enable
for_window [title="^Steam Keyboard$"] floating enable

# There is no specific property for windows that should be floating (eg. the WM_NAME is the device name (PC1))
for_window [class="^PacketTracer6$"] floating enable
for_window [class="^PacketTracer6$" title="PT Activity"] floating disable
for_window [class="^PacketTracer6$" title="Cisco Packet Tracer"] floating disable

#gaps inner 8
smart_gaps on

#Sto cercando di creare una mode per i gaps 
# Set inner/outer gaps
gaps inner 10
 gaps outer 1
# gaps vertical -30

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
# smart_borders on
################# i3-radius #######################
#smart_borders on
#smart_borders no_gaps
#border_radius 2


# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# client.focused #555555 #555555 #ffffff #2e9ef4     #CC0000
client.focused #000000 #000000 #000000 #ff79c6  #000000

# border_radius 4

#start in opposite orientation from your monitor
default_orientation vertical 
#toggles split at each new window
for_window [class=".*"] split toggle 
#kill command resets the split
# bindsym $mod+shift+q split toggle kill 
# should already exist but use if split orientation  messes up
# bindsym $mod+e layout toggle split 


# mpv music controller bindings
#set $controller ~/Scripts/mpv-controller.sh
#bindsym $mod+Shift+P exec $controller pause
#bindsym $mod+Shift+bracketleft exec $controller prev
#bindsym $mod+Shift+bracketright exec $controller next
#bindsym $mod+Shift+semicolon exec $controller skip -10
#bindsym $mod+Shift+apostrophe exec $controller skip 10
#bindsym $mod+Shift+comma exec $controller skipper -5
#bindsym $mod+Shift+period exec $controller skipper 5
#bindsym $mod+Shift+m exec ~/Scripts/rofi/launch.sh music
#bindsym $mod+Shift+l exec $controller stop
#bindsym $mod+Shift+o exec $controller info
#bindsym $mod+Shift+minus exec $controller vol -10
#bindsym $mod+Shift+equal exec $controller vol 10

# Always float certain windows
for_window [class="mpv"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="polybar"] border pixel 0
#for_window [class="vlc"] floating enable

# Make sure fonts are loaded right
#exec_always xset +fp /home/kai/.fonts/
#exec_always xset fp rehash


# Allow scripts to interface with dbus
exec_always --no-startup-id ~/Scripts/Xdbus.sh

# Start notification daemon
exec_always --no-startup-id dunst


# Startup daemons for compositor and status bar
exec_always --no-startup-id pkill picom; picom --experimental-backends
# Starts polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Increase screen contrast (disable for better displays)
#exec_always --no-startup-id xrandr --output eDP --gamma 0.8:0.8:0.8

# Use URxvt settings from Xresources
#exec_always --no-startup-id xrdb ~/.Xresources
#Start pulseaudio
exec --no-startup-id pulseaudio --start
#Start redshift save your eyes
exec --no-startup-id redshift-gtk

# Polkit agent
exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &



## Quality of life improvment
exec  ~/.config/i3/Scripts/welcome.sh
#my bueautyfull conky
exec --no-startup-id conky -c "$HOME/.conky/Matt.conkyrc"
#my bueatyfull single  wallpaper
#exec --no-startup-id betterlockscreen -w
# Run startup wallpaper
#exec_always bash -c "feh --bg-fill $(cat ~/Scripts/default-bg.txt | tr -d '\n')"
exec --no-startup-id "~/.config/i3/Scripts/i3-wpd/i3wpd.sh"
### Mouse autohide
exec --no-startup-id "unclutter -idle 5"

exec --no-startup-id "play-with-mpv"


##Fusion 15 specific keybyinding and setting
bindsym XF86TouchpadToggle exec   ~/.config/i3/Scripts/toogleTouchpad.sh
bindsym Mod1+F2 exec   ~/.config/i3/Scripts/tooglePerformance.sh
exec --no-startup-id "tuxedo-control-center --tray"
exec "system76-power profile battery"
#Set keybord to locale
exec "setxkbmap -layout it"
# Enable tap to click - will need to change input
# device id and property number. See [link] for more
#exec_always --no-startup-id xinput set-prop 12 284 1 > /dev/null 2>&1
# ENABLE TOUCHPAD tap to click on fusion
exec xinput set-prop "UNIW0001:00 093A:1336 Touchpad" "libinput Tapping Enabled" 1
## add keyboard and lightbar controol
exec ./.system_tray_extensions/start.sh
